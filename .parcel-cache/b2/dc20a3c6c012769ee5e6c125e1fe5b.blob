const $siteList = $('.siteList');
const $lastLi = $siteList.find('li.last');
const x = localStorage.getItem('x')//获取localStorage，第一次执行的为空
;
const xObject = JSON.parse(x)//将localStorage从字符串转化为对象
;
const hashMap = xObject || [
    {
        logo: 'A',
        url: 'https://www.acfun.cn'
    },
    {
        logo: 'B',
        url: 'https://www.bilibili.com'
    }
];
const simplifyUrl = (url)=>{
    return url.replace('https://', '').replace('http://', '').replace('www.', '').replace(/\/.*/, ''); //删除斜杆后面的内容——  / \ /.*/   /为斜杆，\为反斜杆，反斜杆为转义字符，表示斜杆用：\ /  ,表示斜杆后面的所有内容： /.*
};
const render = ()=>{
    $siteList.find('li:not(.last)').remove(); //移除已有网址防止重新渲染
    hashMap.forEach((node, index)=>{
        const $li = $(`\n        <li>\n                <div class="site">\n                    <div class="logo">${node.logo[0]}</div>\n                    <div class="link">${simplifyUrl(node.url)}</div>\n                    <div class ="close">\n                    <svg class="icon" >\n                    <use xlink:href="#icon-close"></use>\n                    </svg>\n                    </div>\n                        </div>\n                </li>\n        `).insertBefore($lastLi);
        $li.on('click', ()=>{
            window.open(node.url);
        });
        $li.on('click', '.close', (e)=>{
            e.stopPropagation(); //阻止冒泡到close按钮
            hashMap.splice(index, 1);
            render();
        });
    });
};
render(); //先全部渲染一遍
$('.addButton').on('click', ()=>{
    let url = prompt('请输入你要新增网站的网址：');
    if (url.indexOf('https') !== 0) url = 'https://' + url;
    hashMap.push({
        logo: simplifyUrl(url)[0].toUpperCase(),
        url: url
    });
    render(); // 重新渲染哈希数组以读档
});
window.onbeforeunload = ()=>{
    const myStorage = JSON.stringify(hashMap)//将哈希数组从对象转化为字符串
    ;
    localStorage.setItem('x', myStorage);
};
